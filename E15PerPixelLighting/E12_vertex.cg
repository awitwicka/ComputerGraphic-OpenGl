/* 
  Vertex shader for simple light models
  by Daniel Jungblut, IWR Heidelberg, February 2008
  revised by Susanne Kroemker, IWR Heidelberg, May 2014
*/  



// simplified Blinn-Phong shading light model for a single light source 
// light source can be moved with the space bar
// consider all vector geometry calculations in world coordinate system
// the following functions may be helpful
//
// normalization of a vector
// A = normalize(B);  
//
// scalar (or dot) product
// float s = dot(A, B);
//
// maximum
// float m = max(a, b);
//
// power function
// float p = pow(a, b);

 

void per_vertex_lighting(
		float4 position : POSITION,	   // input coordinates in object space
		out float4 out_position : POSITION,// output coordinates in monitor space
		uniform float3 translation, 
		float3 normal : NORMAL, 	   // surface normals in object space
		//out float4 out_color : COLOR,      // output color of a vertex
                out float3 out_objposition : TEXCOORD0,
                out float3 out_normal   : TEXCOORD1,
		uniform float4x4 modelview_proj   // concatenation of modelview und projection matrix
		) {

  out_position = mul(modelview_proj, position);

  out_objposition = position.xyz + translation;   // vertex in world coordinates
  out_normal = normal;			   // normal in world coordinate

}
